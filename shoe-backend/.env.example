# =============================================================================
# SOLEWAALE BACKEND - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values
# Never commit .env files to version control!

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Environment (development, production, test)
NODE_ENV=production

# Server Configuration
PORT=5000
HOST=0.0.0.0

# Application Name and Version
APP_NAME="Solewaale API"
APP_VERSION=1.0.0

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB Connection URI
# For local development: mongodb://localhost:27017/shoe-store
# For production: mongodb://username:password@host:port/database
# For MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/database
MONGODB_URI=mongodb://localhost:27017/shoe-store

# Database Connection Pool Settings
DB_MAX_POOL_SIZE=20
DB_MIN_POOL_SIZE=5
DB_MAX_IDLE_TIME_MS=30000
DB_WAIT_QUEUE_TIMEOUT_MS=5000

# Database Connection Timeout Settings
DB_SERVER_SELECTION_TIMEOUT_MS=5000
DB_SOCKET_TIMEOUT_MS=45000
DB_CONNECT_TIMEOUT_MS=10000
DB_HEARTBEAT_FREQUENCY_MS=10000

# Database Write Concern and Reliability
DB_RETRY_WRITES=true
DB_RETRY_READS=true
DB_WRITE_CONCERN=majority
DB_JOURNAL=true

# Database Performance Optimizations
DB_MAX_STALENESS_SECONDS=90
DB_COMPRESSORS=zlib
DB_ZLIB_COMPRESSION_LEVEL=6

# Database Buffer Settings (Production: disable buffering)
DB_BUFFER_COMMANDS=false

# Database Schema Settings (Production: disable auto-operations)
DB_AUTO_INDEX=false
DB_AUTO_CREATE=false

# =============================================================================
# JWT AUTHENTICATION
# =============================================================================

# JWT Secret Key (MUST be a strong, random string in production)
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secure-jwt-secret-key-change-this-in-production

# JWT Configuration
JWT_EXPIRES_IN=24h
JWT_ISSUER=shoe-store-api
JWT_AUDIENCE=shoe-store-users

# Refresh Token Settings
REFRESH_TOKEN_SECRET=your-refresh-token-secret-change-this-in-production
REFRESH_TOKEN_EXPIRES_IN=7d

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Password Hashing
BCRYPT_ROUNDS=12

# Account Security
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_TIME_MINUTES=30
SESSION_TIMEOUT_HOURS=24

# Admin API Key (for admin operations)
ADMIN_API_KEY=your-admin-api-key-change-this-in-production

# Rate Limiting Configuration
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=200
AUTH_RATE_LIMIT_WINDOW_MS=900000
AUTH_RATE_LIMIT_MAX_REQUESTS=5
UPLOAD_RATE_LIMIT_WINDOW_MS=60000
UPLOAD_RATE_LIMIT_MAX_REQUESTS=10

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Frontend URL for CORS (comma-separated for multiple origins)
# Development: http://localhost:5173
# Production: https://www.solewaale.com
FRONTEND_URL=http://localhost:5173

# Additional CORS Origins (optional)
# Include both HTTP and HTTPS versions for production
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://www.solewaale.com,https://www.solewaale.com,http://solewaale.com,https://solewaale.com

# CORS Credentials
CORS_CREDENTIALS=true

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================

# Upload Directory
UPLOAD_DIR=uploads
UPLOAD_PATH=./uploads

# File Size Limits (in bytes)
MAX_FILE_SIZE=5242880
MAX_IMAGE_SIZE=2097152

# Allowed File Types
ALLOWED_IMAGE_TYPES=image/jpeg,image/png,image/webp
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/webp,application/pdf

# Image Processing
IMAGE_QUALITY=80
IMAGE_MAX_WIDTH=1200
IMAGE_MAX_HEIGHT=1200

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level (error, warn, info, http, verbose, debug, silly)
LOG_LEVEL=info

# Log Directory
LOG_DIR=logs

# Log File Names
ERROR_LOG_FILE=error.log
COMBINED_LOG_FILE=combined.log
ACCESS_LOG_FILE=access.log

# Log Rotation
LOG_MAX_SIZE=20m
LOG_MAX_FILES=14d
LOG_DATE_PATTERN=YYYY-MM-DD

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# Email Service Provider
EMAIL_SERVICE=gmail
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false

# Email Credentials
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# Email Settings
EMAIL_FROM_NAME=Solewaale
EMAIL_FROM_ADDRESS=noreply@shoestore.com

# =============================================================================
# PAYMENT GATEWAY CONFIGURATION
# =============================================================================

# Razorpay Configuration
RAZORPAY_KEY_ID=rzp_test_RGEOIVI0H5XyUe
RAZORPAY_KEY_SECRET=py06Ns1J27cG5FY3FIKdt6oG

# Stripe Configuration (alternative)
STRIPE_PUBLIC_KEY=pk_test_your_stripe_public_key
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# =============================================================================
# ADMIN CONFIGURATION
# =============================================================================

# Default Admin Account
ADMIN_EMAIL=admin@shoestore.com
ADMIN_PASSWORD=SecureAdminPassword123!

# =============================================================================
# SSL/TLS CONFIGURATION (Production)
# =============================================================================

# SSL Certificate Paths (for HTTPS)
SSL_KEY_PATH=/path/to/private-key.pem
SSL_CERT_PATH=/path/to/certificate.pem
SSL_CA_PATH=/path/to/ca-bundle.pem

# Force HTTPS Redirect
FORCE_HTTPS=true

# HSTS Configuration
HSTS_MAX_AGE=31536000
HSTS_INCLUDE_SUBDOMAINS=true
HSTS_PRELOAD=true

# =============================================================================
# REDIS CONFIGURATION (Optional - for session storage and caching)
# =============================================================================

# Redis Connection
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Redis Session Configuration
REDIS_SESSION_SECRET=your-redis-session-secret
REDIS_SESSION_TTL=86400

# =============================================================================
# MONITORING AND HEALTH CHECKS
# =============================================================================

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000

# Metrics Configuration
METRICS_ENABLED=true
METRICS_PORT=9090

# =============================================================================
# CLOUD STORAGE (AWS S3 example)
# =============================================================================

# AWS Configuration
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
AWS_S3_BUCKET=your-s3-bucket-name

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Debug Mode
DEBUG=false

# API Documentation
API_DOCS_ENABLED=true
API_DOCS_PATH=/api-docs

# Development Database (for testing)
TEST_MONGODB_URI=mongodb://localhost:27017/shoe-store-test

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup Settings
BACKUP_DIR=backups
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE=0 2 * * *

# MongoDB Backup
MONGODB_BACKUP_HOST=localhost
MONGODB_BACKUP_PORT=27017
MONGODB_BACKUP_DB=shoe-store
MONGODB_BACKUP_USER=
MONGODB_BACKUP_PASS=

# =============================================================================
# PERFORMANCE SETTINGS
# =============================================================================

# Request Timeout
REQUEST_TIMEOUT=30000

# Body Parser Limits
BODY_LIMIT=10mb
JSON_LIMIT=1mb
URL_ENCODED_LIMIT=1mb

# Compression
COMPRESSION_ENABLED=true
COMPRESSION_LEVEL=6
COMPRESSION_THRESHOLD=1024

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker Environment
DOCKER_ENV=production

# Container Settings
CONTAINER_USER=node
CONTAINER_GROUP=node

# =============================================================================
# NOTES
# =============================================================================
# 
# 1. Generate secure secrets using:
#    node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
#
# 2. For production, ensure all secrets are properly configured
#
# 3. Use environment-specific .env files:
#    - .env.development
#    - .env.production
#    - .env.test
#
# 4. Never commit .env files to version control
#
# 5. Use a secrets management service in production (AWS Secrets Manager, etc.)
#
# =============================================================================